---
AWSTemplateFormatVersion: '2010-09-09'
Description: Create autoscale groups

##
# This template creates the autoscaling groups and templates
# for the EC2 instances
#
# The scaling policy described in this template uses the ChangeInCapacity
# strategy, which means that the `ScalingAdjustment` attribute will determine
# the amount of instances to add or remove from the auto scaling group when
# cloudwatch alarms are triggered. This will currently add one new instance
# whenever the `CPUAlarmHigh` is triggered.

Parameters:
  # Global params
  AppName:
    Type: String
    Description: the name of the application
    AllowedPattern: '[A-Za-z0-9]+'
    ConstraintDescription: must be alphanumeric
  BuildNumber:
    Type: String
    Description: The build version number. Should increment each time the stack is
      updated.
    AllowedPattern: \d+
    ConstraintDescription: must be an integer
    Default: 1
  Environment:
    Type: String
    Description: The type of environment you are deploying.
    ConstraintDescription: must be one of production, or staging
    Default: staging
    AllowedValues: [production, staging]
  AZ1:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: The first availability zone.
    ConstraintDescription: AZ1 must be a valid availability zone.
    Default: us-east-2a
  AZ2:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: The second availability zone.
    ConstraintDescription: AZ2 must be a valid availability zone.
    Default: us-east-2b

  # Params from other stacks
  WebServerSG:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The web server security group ID for the EC2 instance
  PublicTierSubnet1a:
    Type: AWS::EC2::Subnet::Id
    Description: The public tier subnet in AZ 1a
  PublicTierSubnet1b:
    Type: AWS::EC2::Subnet::Id
    Description: The public tier subnet in AZ 1b
  WebLoadBalancerTargetGroupARN:
    Type: String
    Description: The target group ARN of the load balancer
  ServerIamRoleInstanceProfileArn:
    Type: String
    Description: The full ARN for the IAM instance profile for the servers.

  # Custom params
  DeploymentBucketName:
    Type: String
    Description: The name of the application's deployment bucket
    AllowedPattern: '[a-z][-a-z0-9]+'
    ConstraintDescription: S3 bucket name must be between 5 and 40 characters and
      be alphanumeric (plus hyphens)
    Default: {{ cookiecutter.project_slug }}-deployment
    MinLength: 5
    MaxLength: 40
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of existing EC2 KeyPair to enable access to the EC2 instances (e.g. {{ cookiecutter.project_slug }}-staging)
    AllowedPattern: '[\x20-\x7E]+'
    ConstraintDescription: can only contain ASCII characters
    MinLength: 1
    MaxLength: 255
    Default: {{ cookiecutter.project_slug }}-
  WebServerImageId:
    Type: String
    Description: The AMI ID for the server instances.
    # Default Ubuntu 18.04 instance as of 2020-10-23
    Default: ami-0817d428a6fb68645
  WebServerInstanceType:
    Type: String
    Description: The instance type for your web nodes.
    Default: t3.small
    AllowedValues: [
      t2.2xlarge, t2.large, t2.medium, t2.micro, t2.nano, t2.small, t2.xlarge,
      t3.2xlarge, t3.large, t3.medium, t3.micro, t3.nano, t3.small, t3.xlarge,
      t3a.2xlarge, t3a.large, t3a.medium, t3a.micro, t3a.nano, t3a.small,
      t3a.xlarge, a1.2xlarge, a1.4xlarge, a1.large, a1.medium, a1.metal,
      a1.xlarge, c4.2xlarge, c4.4xlarge, c4.8xlarge, c4.large, c4.xlarge,
      c5.12xlarge, c5.18xlarge, c5.24xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge,
      c5.large, c5.metal, c5.xlarge, c5d.18xlarge, c5d.2xlarge, c5d.4xlarge,
      c5d.9xlarge, c5d.large, c5d.xlarge, c5n.18xlarge, c5n.2xlarge,
      c5n.4xlarge, c5n.9xlarge, c5n.large, c5n.metal, c5n.xlarge, d2.2xlarge,
      d2.4xlarge, d2.8xlarge, d2.xlarge, f1.16xlarge, f1.2xlarge, f1.4xlarge,
      g2.2xlarge, g2.8xlarge, g3.16xlarge, g3.4xlarge, g3.8xlarge, g3s.xlarge,
      g4dn.12xlarge, g4dn.16xlarge, g4dn.2xlarge, g4dn.4xlarge, g4dn.8xlarge,
      g4dn.xlarge, h1.16xlarge, h1.2xlarge, h1.4xlarge, h1.8xlarge, i2.2xlarge,
      i2.4xlarge, i2.8xlarge, i2.xlarge, i3.16xlarge, i3.2xlarge, i3.4xlarge,
      i3.8xlarge, i3.large, i3.metal, i3.xlarge, i3en.12xlarge, i3en.24xlarge,
      i3en.2xlarge, i3en.3xlarge, i3en.6xlarge, i3en.large, i3en.metal,
      i3en.xlarge, m4.10xlarge, m4.16xlarge, m4.2xlarge, m4.4xlarge, m4.large,
      m4.xlarge, m5.12xlarge, m5.16xlarge, m5.24xlarge, m5.2xlarge, m5.4xlarge,
      m5.8xlarge, m5.large, m5.metal, m5.xlarge, m5a.12xlarge, m5a.16xlarge,
      m5a.24xlarge, m5a.2xlarge, m5a.4xlarge, m5a.8xlarge, m5a.large,
      m5a.xlarge, m5ad.12xlarge, m5ad.24xlarge, m5ad.2xlarge, m5ad.4xlarge,
      m5ad.large, m5ad.xlarge, m5d.12xlarge, m5d.16xlarge, m5d.24xlarge,
      m5d.2xlarge, m5d.4xlarge, m5d.8xlarge, m5d.large, m5d.metal, m5d.xlarge,
      m5dn.12xlarge, m5dn.16xlarge, m5dn.24xlarge, m5dn.2xlarge, m5dn.4xlarge,
      m5dn.8xlarge, m5dn.large, m5dn.xlarge, m5n.12xlarge, m5n.16xlarge,
      m5n.24xlarge, m5n.2xlarge, m5n.4xlarge, m5n.8xlarge, m5n.large,
      m5n.xlarge, p2.16xlarge, p2.8xlarge, p2.xlarge, p3.16xlarge, p3.2xlarge,
      p3.8xlarge, p3dn.24xlarge, r4.16xlarge, r4.2xlarge, r4.4xlarge,
      r4.8xlarge, r4.large, r4.xlarge, r5.12xlarge, r5.16xlarge, r5.24xlarge,
      r5.2xlarge, r5.4xlarge, r5.8xlarge, r5.large, r5.metal, r5.xlarge,
      r5a.12xlarge, r5a.16xlarge, r5a.24xlarge, r5a.2xlarge, r5a.4xlarge,
      r5a.8xlarge, r5a.large, r5a.xlarge, r5ad.12xlarge, r5ad.24xlarge,
      r5ad.2xlarge, r5ad.4xlarge, r5ad.large, r5ad.xlarge, r5d.12xlarge,
      r5d.16xlarge, r5d.24xlarge, r5d.2xlarge, r5d.4xlarge, r5d.8xlarge,
      r5d.large, r5d.metal, r5d.xlarge, r5dn.12xlarge, r5dn.16xlarge,
      r5dn.24xlarge, r5dn.2xlarge, r5dn.4xlarge, r5dn.8xlarge, r5dn.large,
      r5dn.xlarge, r5n.12xlarge, r5n.16xlarge, r5n.24xlarge, r5n.2xlarge,
      r5n.4xlarge, r5n.8xlarge, r5n.large, r5n.xlarge, x1.16xlarge, x1.32xlarge,
      x1e.16xlarge, x1e.2xlarge, x1e.32xlarge, x1e.4xlarge, x1e.8xlarge,
      x1e.xlarge, z1d.12xlarge, z1d.2xlarge, z1d.3xlarge, z1d.6xlarge,
      z1d.large, z1d.metal, z1d.xlarge
    ]
  WebServerMonitoring:
    Type: String
    Description: Whether or not to enable detailed monitoring for this instance
    Default: 'no'
    AllowedValues: ['yes', 'no']
  ServerName:
    Type: String
    Description: The server name to be used by nginx
    Default: staging.{{ cookiecutter.project_slug }}.com

Conditions:
  EnableWebServerDetailedMonitoring: !Equals [!Ref WebServerMonitoring, 'yes']
  IsProduction: !Equals [!Ref Environment, 'production']

Resources:
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub "${AppName}-LaunchTemplate-${Environment}"
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              DeleteOnTermination: true
              VolumeSize: 24
              VolumeType: gp2
        DisableApiTermination: False
        EbsOptimized: False
        IamInstanceProfile:
          Arn: !Ref ServerIamRoleInstanceProfileArn
        ImageId: !Ref WebServerImageId
        InstanceInitiatedShutdownBehavior: terminate
        InstanceType: !Ref WebServerInstanceType
        KeyName: !Ref KeyName
        Monitoring:
          Enabled: !If [EnableWebServerDetailedMonitoring, true, false]
        SecurityGroupIds: [!Ref WebServerSG]
        UserData:
          Fn::Base64:
            Fn::Sub: |
              #!/bin/bash
              DEBIAN_FRONTEND=noninteractive

              apt update -qq && \
                apt install -y wget python-pip awscli

              BUCKET_URL=s3://${DeploymentBucketName}

              aws s3 cp $BUCKET_URL/scripts/bootstrap.sh ./ \
                && bash bootstrap.sh ${Environment} ${ServerName} ${DeploymentBucketName}

              # signal auto-scale provisioning complete
              /opt/aws/bin/cfn-signal -e $? \
                --stack ${AWS::StackName} \
                --resource AutoScaleGroup \
                --region ${AWS::Region}
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub "${AppName} Launch Instance (${Environment})"
  AutoScaleGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${AppName} AutoScalingGroup (${Environment})"
      AvailabilityZones: [!Ref AZ1, !Ref AZ2]
      MinSize: !If [IsProduction, 2, 0]
      MaxSize: !If [IsProduction, 4, 2]
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      Cooldown: 120
      HealthCheckGracePeriod: 3600
      VPCZoneIdentifier: [!Ref PublicTierSubnet1a, !Ref PublicTierSubnet1b]
      TargetGroupARNs: [!Ref WebLoadBalancerTargetGroupARN]
      Tags:
        - Key: Name
          PropagateAtLaunch: True
          Value: !Sub "${AppName} Web Server (${Environment})"
  ScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScaleGroup
      ScalingAdjustment: 1
      Cooldown: 600
  ScaleUpQuicklyPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScaleGroup
      ScalingAdjustment: 1
      Cooldown: 600
  ScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScaleGroup
      ScalingAdjustment: -1
      Cooldown: 600
  ScaleDownQuicklyPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScaleGroup
      ScalingAdjustment: -1
      Cooldown: 600
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 1
      Statistic: Average
      Threshold: 50
      ComparisonOperator: GreaterThanThreshold
      AlarmDescription: Alarm if CPU metrics are too high or CPU metric
        disappears indicating instance is down
      Period: 300
      AlarmActions: [!Ref ScaleUpPolicy]
      Namespace: AWS/EC2
      MetricName: !Sub "${AppName}-${Environment}-CPUHigh"
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScaleGroup
  CPUAlarmVeryHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 1
      Statistic: Average
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      AlarmDescription: Alarm if CPU metrics are too high or CPU metric disappears
        indicating instance is down
      Period: 60
      AlarmActions: [!Ref ScaleUpQuicklyPolicy]
      Namespace: AWS/EC2
      MetricName: !Sub "${AppName}-${Environment}-CPUVeryHigh"
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScaleGroup
  CPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 1
      Statistic: Average
      Threshold: 25
      ComparisonOperator: LessThanThreshold
      AlarmDescription: Alarm if CPU metrics are low for 5 minutes
      Period: 300
      AlarmActions: [!Ref ScaleDownPolicy]
      Namespace: AWS/EC2
      MetricName: !Sub "${AppName}-${Environment}-CPULow"
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScaleGroup
  CPUAlarmVeryLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 1
      Statistic: Average
      Threshold: 10
      ComparisonOperator: LessThanThreshold
      AlarmDescription: Alarm if CPU metrics are too high or CPU metric disappears
        indicating instance is down
      Period: 60
      AlarmActions: [!Ref ScaleDownQuicklyPolicy]
      Namespace: AWS/EC2
      MetricName: !Sub "${AppName}-${Environment}-CPUVeryLow"
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScaleGroup

Outputs:
  LaunchTemplate:
    Value: !Ref LaunchTemplate
    Description: The applications launch template
  AutoScaleGroup:
    Value: !Ref AutoScaleGroup
    Description: The applications autoscale group
